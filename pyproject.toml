[project]
name = "article-selector"
version = "1.0.0"
description = "AI-powered article selection system for open source security newsletters"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "agno>=1.7.4",
    "fastapi>=0.115.0",
    "uvicorn>=0.30.0",
    "pydantic>=2.0.0",
    "boto3>=1.34.0",
    "python-multipart>=0.0.6",
    "httpx>=0.27.0",
    "duckdb>=1.0.0",
    "pandas>=2.0.0",
    "python-dotenv>=1.0.0",
    "pytz>=2024.1",
    "pydantic-settings>=2.0.0",
    "google-genai>=0.1.0",
    "anthropic>=0.64.0",
    "google-generativeai>=0.8.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "ipython>=8.0.0",
]

[project.scripts]
article-selector = "cli.run_agent:main"
article-selector-api = "api.main:run_server"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["core", "projects"]

[tool.ruff]
line-length = 120
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from cause
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
follow_imports = "silent"
no_implicit_optional = true
strict_optional = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
